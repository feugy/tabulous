fragment lightPlayer on Player {
  id
  username
  playing
}

mutation createGame($kind: String!) {
  createGame(kind: $kind) {
    id
  }
}

mutation deleteGame($gameId: ID!) {
  deleteGame(gameId: $gameId) {
    id
  }
}

mutation invite($gameId: ID!, $playerId: ID!) {
  invite(gameId: $gameId, playerId: $playerId) {
    players {
      ...lightPlayer
    }
  }
}

subscription listGames {
  listGames {
    id
    created
    kind
    players {
      ...lightPlayer
    }
  }
}

query loadGame($gameId: ID!) {
  loadGame(gameId: $gameId) {
    id
    players {
      ...lightPlayer
    }
    meshes {
      id
      texture
      x
      y
      z
      shape
      width
      height
      depth
      diameter
      borderRadius
      borderColor
      detailable {
        frontImage
        backImage
      }
      movable {
        duration
        snapDistance
        kind
      }
      flippable {
        isFlipped
        duration
      }
      rotable {
        angle
        duration
      }
      stackable {
        stack
        duration
        extent
        kinds
        isCylindric
      }
      anchorable {
        anchors {
          x
          y
          z
          width
          height
          depth
          kinds
          snappedId
        }
        duration
      }
    }
    messages {
      playerId
      text
      time
    }
    cameras {
      playerId
      index
      target
      alpha
      beta
      elevation
      hash
    }
    rulesBookPageCount
  }
}

query loadGamePlayers($gameId: ID!) {
  loadGame(gameId: $gameId) {
    players {
      ...lightPlayer
    }
  }
}

mutation saveGame($game: GameInput!) {
  saveGame(game: $game) {
    id
  }
}
