fragment lightPlayer on Player {
  id
  username
  playing
}

fragment movable on MovableState {
  duration
  snapDistance
  kind
}

fragment flippable on FlippableState {
  isFlipped
  duration
}

fragment rotable on RotableState {
  angle
  duration
}

fragment stackable on StackableState {
  stack
  duration
  extent
  kinds
  isCylindric
}

fragment anchorable on AnchorableState {
  anchors {
    x
    y
    z
    width
    height
    depth
    kinds
    snappedId
  }
  duration
}

mutation createGame($kind: String!) {
  createGame(kind: $kind) {
    id
  }
}

mutation deleteGame($gameId: ID!) {
  deleteGame(gameId: $gameId) {
    id
  }
}

mutation invite($gameId: ID!, $playerId: ID!) {
  invite(gameId: $gameId, playerId: $playerId) {
    players {
      ...lightPlayer
    }
  }
}

subscription listGames {
  listGames {
    id
    created
    kind
    players {
      ...lightPlayer
    }
  }
}

query loadGame($gameId: ID!) {
  loadGame(gameId: $gameId) {
    id
    players {
      ...lightPlayer
    }
    meshes {
      id
      texture
      images {
        front
        back
      }
      x
      y
      z
      shape
      width
      height
      depth
      diameter
      borderRadius
      borderColor
      detailable
      movable {
        ...movable
      }
      flippable {
        ...flippable
      }
      rotable {
        ...rotable
      }
      stackable {
        ...stackable
      }
      anchorable {
        ...anchorable
      }
    }
    messages {
      playerId
      text
      time
    }
    cameras {
      playerId
      index
      target
      alpha
      beta
      elevation
      hash
    }
    rulesBookPageCount
  }
}

query loadGamePlayers($gameId: ID!) {
  loadGame(gameId: $gameId) {
    players {
      ...lightPlayer
    }
  }
}

mutation saveGame($game: GameInput!) {
  saveGame(game: $game) {
    id
  }
}
