fragment player on Player {
  id
  username
  avatar
}

fragment authentication on PlayerWithTurnCredentials {
  token
  player {
    ...player
    provider
    email
    termsAccepted
    usernameSearchable
  }
  turnCredentials {
    username
    credentials
  }
}

mutation logIn($id: ID!, $password: String!) {
  logIn(id: $id, password: $password) {
    ...authentication
  }
}

query getCurrentPlayer {
  getCurrentPlayer {
    ...authentication
  }
}

query searchPlayers($search: String!) {
  searchPlayers(search: $search) {
    ...player
  }
}

mutation acceptTerms {
  acceptTerms {
    ...player
    termsAccepted
  }
}

mutation updateCurrentPlayer($username: String, $avatar: String) {
  updateCurrentPlayer(username: $username, avatar: $avatar) {
    ...player
    usernameSearchable
  }
}

mutation setUsernameSearchability($searchable: Boolean!) {
  updateCurrentPlayer(usernameSearchable: $searchable) {
    ...player
    usernameSearchable
  }
}

query listFriends {
  listFriends {
    player {
      ...player
    }
    isRequest
    isProposal
  }
}

mutation requestFriendship($id: ID!) {
  requestFriendship(id: $id)
}

mutation acceptFriendship($id: ID!) {
  acceptFriendship(id: $id)
}

mutation endFriendship($id: ID!) {
  endFriendship(id: $id)
}

subscription receiveFriendshipUpdates {
  receiveFriendshipUpdates {
    from {
      ...player
    }
    requested
    proposed
    accepted
    declined
  }
}
